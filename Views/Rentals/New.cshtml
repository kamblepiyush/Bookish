@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRental">
    @*div.form-group>label+input[type='text'].form-control*@
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Book</label>
        <div class="tt-container">
            <input id="book" name="book" data-rule-atLeastOneBook="true" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <ul id="books" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {

            var vm = {
                bookIds: []
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select",
                function(e, customer) {
                    vm.customerId = customer.id;
                });

            var books = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/books?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#book').typeahead({
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'books',
                    display: 'name',
                    source: books
                }).on("typeahead:select",
                function(e, book) {
                    $("#books").append("<li class='list-group-item'>" + book.name + "</li>");

                    $("#book").typeahead("val", "");

                    vm.bookIds.push(book.id);
                });

            $.validator.addMethod("validCustomer",
                function () {
                    return vm.customerId && vm.customerId !== 0;
                },
                "Please select a valid customer");

            $.validator.addMethod("atLeastOneBook",
                function () {
                    return vm.bookIds.length > 0;
                },
                "Please select at least one book");

            var validator = $("#newRental").validate({
                rules: {
                    customer: {validCustomer: true},
                    book: {atLeastOneBook: true}
                },

                submitHandler: function () {
                    $.ajax({
                            url: "/api/newRentals",
                            method: "post",
                            data: vm
                        })
                        .done(function () {
                            toastr.success("Rental successfully recorded");

                            $("#customer").typeahead("val", "");
                            $("#book").typeahead("val", "");
                            $("#books").empty();

                            vm = { bookIds: [] };

                            validator.resetForm();
                        })
                        .fail(function () {
                            toastr.error("Something unexpected happened");
                        });

                    return false;
                }
            });
        });
    </script>
}
